"use strict";var __GlitchGuardCDN=(()=>{function u(){try{let e=sessionStorage.getItem("glitchguard_session_id");return e||(e="session_"+Math.random().toString(36).substring(2),sessionStorage.setItem("glitchguard_session_id",e)),e}catch{return"unknown_session"}}var o=class{constructor(r,t,i){this.endpoint=r,this.apiKey=t,this.projectId=i}async sendErrors(r){try{let t=await fetch(this.endpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({errors:r,apiKey:this.apiKey,projectId:this.projectId}),keepalive:!0});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return!0}catch(t){return console.error("[GlitchGuard] Failed to send errors:",t),!1}}};var a=class{constructor(r,t,i){this.errors=[];this.sendTimeout=null;this.apiClient=r,this.maxBatchSize=t,this.sendIntervalMs=i}add(r){this.errors.push(r),this.sendTimeout||(this.sendTimeout=window.setTimeout(()=>this.sendErrors(),this.sendIntervalMs)),this.errors.length>=this.maxBatchSize&&(this.sendTimeout&&(clearTimeout(this.sendTimeout),this.sendTimeout=null),this.sendErrors())}async sendErrors(){if(this.errors.length===0){this.sendTimeout=null;return}let r=[...this.errors];this.errors=[],this.sendTimeout=null,await this.apiClient.sendErrors(r)||(this.errors=[...this.errors,...r])}flush(){this.errors.length>0&&this.sendErrors()}};function c(e){window.onerror=(r,t,i,n,s)=>(e.captureError({type:s?.name||"uncaught",message:r.toString(),source:t,lineno:i,colno:n,stack:s?.stack,level:"ERROR"}),!1),window.addEventListener("unhandledrejection",r=>{e.captureError({type:"unhandledrejection",message:r.reason?.message||String(r.reason),stack:r.reason?.stack,level:"ERROR"})}),window.addEventListener("beforeunload",()=>{e.flushErrors()})}var d=class{constructor(r,t,i={}){this.projectId=r,this.apiKey=t,this.sessionId=u();let n=i.endpoint||"https://vztymdhclviybpckplzw.supabase.co/functions/v1/capture-error",s=i.maxBatchSize||10,p=i.sendIntervalMs||5e3,h=new o(n,this.apiKey,this.projectId);this.errorQueue=new a(h,s,p),c(this),console.log(`[GlitchGuard] Initialized for project: ${this.projectId}`)}captureError(r){let t={...r,timestamp:new Date().toISOString(),url:window.location.href,route:window.location.pathname,userAgent:navigator.userAgent,userId:"anonymous",sessionId:this.sessionId,appVersion:"cdn",module:this.getCurrentModule(),metadata:{...r.metadata||{}}};this.errorQueue.add(t)}info(r,t={}){this.captureError({type:"info",message:r,context:t,level:"INFO"})}warn(r,t={}){this.captureError({type:"warning",message:r,context:t,level:"WARNING"})}getCurrentModule(){let t=window.location.pathname.split("/").filter(Boolean);return t.length>0?t[0]:"home"}flushErrors(){this.errorQueue.flush()}static getInstance(){return window.__glitchguard_instance}};function l(){let e=document.currentScript;if(!e)return;let r=e.getAttribute("data-project-id"),t=e.getAttribute("data-api-key");if(!r||!t){console.error("[GlitchGuard] Missing required data attributes: data-project-id and data-api-key");return}let i=new d(r,t);window.__glitchguard_instance=i,window.GlitchGuard={captureError:n=>i.captureError(n),info:(n,s)=>i.info(n,s),warn:(n,s)=>i.warn(n,s),flush:()=>i.flushErrors()}}l();})();
//# sourceMappingURL=sdk.js.map